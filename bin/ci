#!/bin/sh

fail() {
  echo "${@}" >&2
  exit 1
}


fail_on_error() {
  "${@}"

  exit=$?
  if [ "$exit" -ne "0" ]; then
    fail "${@} exited with $exit"
  fi

  return 0
}

verify_environment() {
  if [ -z "$TRAVIS_OS_NAME" ]; then
    fail "\$TRAVIS_OS_NAME is not set or empty."
  fi
}

on_os() {
  os="$1"
  shift

  verify_environment

  if [ "$TRAVIS_OS_NAME" = "$os" ]; then
    echo "${@}"
    eval "${@}"
    return $?
  else
    return 0
  fi
}

on_linux() {
  fail_on_error on_os "linux" "${@}"
}

on_osx() {
  fail_on_error on_os "osx" "${@}"
}

on_both() {
  fail_on_error on_os "linux" "${@}"
  fail_on_error on_os "osx" "${@}"
}

build() {
  with_build_env 'shards install'
  with_build_env 'crystal spec --error-trace --stats --progress --no-debug'
}

prepare_build() {
  on_linux docker build -t crystal/stdlib-image .

  on_osx brew update
  on_osx brew install crystal
}

with_build_env() {
  command="$1"

  # Ensure non GMT timezone
  export TZ="America/New_York"

  on_linux docker run \
    -v $PWD:/mnt \
    -w /mnt \
    crystal/stdlib-image /bin/sh -c "'$command'"


  on_osx /bin/sh -c "'$command'"

}

usage() {
  cat <<EOF
bin/ci [-h|--help] command [parameter ...]
Helper script to prepare and run the testsuite on Travis CI.
Commands:
  prepare_build           download and extract any dependencies needed for the build
  build                   run specs, build crystal, run format check, build samples, build the docs
  with_build_env command  run command in the build environment
  help                    display this
EOF
}

command="$1"
shift
case $command in
  prepare_build)
    prepare_build
    ;;
  with_build_env)
    target_command="${@}"
    with_build_env "$target_command"
    ;;
  with_build_env)
    target_command="${@}"
    with_build_env "$target_command"
    ;;
  build)
    build
    ;;
  -h|--help|help)
    usage
    ;;
  *)
    if [ -n "$command" ]; then
      fail "Unknown command $command"
    else
      usage
      exit 1
    fi
    ;;
esac